openapi: 3.0.1

info:
  title: CodeScuffle Code Running API
  description: 'Run CodeScuffle solutions'
  license:
    name: MIT license
    url: https://github.com/Andriamanitra/codescuffle/blob/main/LICENSE
  version: 0.0.1

servers:
- url: http://localhost:8080/api/v1/

tags:
- name: code
  description: Running code
- name: languages
  description: Information about available languages

paths:
  /run/{language}:
    post:
      tags:
      - code
      summary: Run some code written in a specific language and return the output
      operationId: runCode
      parameters:
      - name: language
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LanguageName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRunRequest'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeRunResult'
        400:
          description: Invalid request
        404:
          description: Specified language not found or supported

  /languages:
    get:
      tags:
      - languages
      summary: Get a list of supported languages
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  languages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Language'

components:
  schemas:
    LanguageName:
      type: string
      enum:
      - julia
      - ruby

    CodeRunRequest:
      type: object
      description: Object describing the code to run. In the future this object may also specify other requirements (environment variables or files that need to be created before execution, compilation flags, time/memory limits... )
      properties:
        code:
          type: string
        stdin:
          type: string
      example:
        code: print(readline())
        stdin: "Hello world!"

    CodeRunResult:
      type: object
      properties:
        stdout:
          type: string
        stderr:
          type: string
        compilation_stdout:
          type: string
        compilation_stderr:
          type: string
        compilation_time:
          type: number
          description: If a language is compiled, time taken to compile the code (in seconds), otherwise 0
        execution_time:
          type: number
          description: Time taken to run the code (in seconds)
      example:
        stdout: Hello World!
        stderr: ''
        compilation_stdout: ''
        compilation_stderr: ''
        compilationTime: 0.0
        executionTime: 0.105815

    Language:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageName'
        version:
          type: string
      example:
        name: julia
        version: 1.6.2
